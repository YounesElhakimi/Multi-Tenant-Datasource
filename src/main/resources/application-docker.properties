# Docker-specific configuration
# This profile is used when running the application in Docker containers

# Database Configuration for Docker
app.datasource.main.jdbc-url=${APP_DATASOURCE_MAIN_JDBC_URL:jdbc:mysql://mysql-main:3306/multi_main?useSSL=false&allowPublicKeyRetrieval=true}
app.datasource.main.username=${APP_DATASOURCE_MAIN_USERNAME:root}
app.datasource.main.password=${APP_DATASOURCE_MAIN_PASSWORD:admin}

app.datasource.clienta.jdbc-url=${APP_DATASOURCE_CLIENTA_JDBC_URL:jdbc:mysql://mysql-client-a:3306/multi_client_a?useSSL=false&allowPublicKeyRetrieval=true}
app.datasource.clienta.username=${APP_DATASOURCE_CLIENTA_USERNAME:root}
app.datasource.clienta.password=${APP_DATASOURCE_CLIENTA_PASSWORD:admin}

# Client B uses the same MySQL instance as main but different database
app.datasource.clientb.jdbc-url=${APP_DATASOURCE_CLIENTB_JDBC_URL:jdbc:mysql://mysql-main:3306/multi_client_b?useSSL=false&allowPublicKeyRetrieval=true}
app.datasource.clientb.username=${APP_DATASOURCE_CLIENTB_USERNAME:root}
app.datasource.clientb.password=${APP_DATASOURCE_CLIENTB_PASSWORD:admin}

# Flyway Configuration
spring.flyway.enabled=false
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=true

# Swagger Configuration
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Logging Configuration for Docker
logging.level.com.izicap.dynamicmultidatabase=${LOGGING_LEVEL_COM_IZICAP_DYNAMICMULTIDATABASE:INFO}
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_ORG_HIBERNATE_SQL:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.com.zaxxer.hikari=INFO
logging.level.org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource=INFO
logging.level.org.flywaydb=INFO

# Application Configuration
spring.application.name=Dynamic Multi-Database Router
server.port=${SERVER_PORT:8080}

# JPA Configuration - Disable auto DDL since we're using Flyway
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# HikariCP Configuration for Docker
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.leak-detection-threshold=60000

# Docker-specific optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true